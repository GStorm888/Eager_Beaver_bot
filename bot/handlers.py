from telebot import TeleBot, types
from db.db import Database
from essence import User, Reminder
import datetime

def register_handlers(bot: TeleBot):

    def examination_date_type(user_time):
        time_format = "%H:%M"
        try:
            datetime.datetime.strptime(user_time, time_format)
            return True
        except:
            return False
        
    # @bot.message_handler(commands=["test"])
    # def test(message):
    #     if message.text == "üîô–ù–∞–∑–∞–¥" or message.text == "–ù–∞–∑–∞–¥":
    #         handle_button(message)
    #         return
    #     Database.create_table()
    #     all_users = Database.get_all_users()
    #     print(all_users)
    #     all_reminders = Database.get_all_reminder()
    #     print(all_reminders)
        # markup = types.ReplyKeyboardRemove()
        # bot.send_message(message.chat.id, """–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç—á–∏—â–µ–Ω–∞""", reply_markup=markup)

    
    @bot.message_handler(commands=["start"])
    def start(message):
        telegram_id = str(message.chat.id)
        if Database.get_user_from_users_by_telegram_id(telegram_id) is not None:
            bot.send_message(message.chat.id, "–ø—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö.")
            start_help_back_button(message)
            return None
        else:
            login(message)


    def login(message):
        bot.send_message(message.chat.id, "–ø—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö. –≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é(—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª), –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —è –ø–æ–Ω–∏–º–∞–ª –∫—Ç–æ —Ç—ã")
        bot.register_next_step_handler(message, start)


    def login_user_name(message):
        user_input = message.text
        user_name = user_input.replace(" ", "_")
        telegram_id = str(message.chat.id)
        if Database.get_user_from_users_by_const_user_name(user_name) is not None:
            Database.change_telegram_id_in_users_by_user_name(user_name)
            bot.send_message(
                message.chat.id, "—Ö–æ—Ä–æ—à–æ, —è —Ç–µ–±—è –Ω–∞—à–µ–ª"
            )
        start_help_back_button(message)

    # –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ 'üîô–ù–∞–∑–∞–¥'
    def start_help_back_button(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("üîô–ù–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(
            message.chat.id,
            "–ß—Ç–æ–±—ã –æ—Ç–∫—É–¥–∞ —É–≥–æ–¥–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤ Help, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üîô–ù–∞–∑–∞–¥'",
            reply_markup=markup,
        )

    @bot.message_handler(
        func=lambda message: message.text == "üîô–ù–∞–∑–∞–¥"
    )
    def back_button(message):
        bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ, –≤–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ Help")
        help(message)
